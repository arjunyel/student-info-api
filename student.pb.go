// Code generated by protoc-gen-go.
// source: student.proto
// DO NOT EDIT!

/*
Package studentinfo is a generated protocol buffer package.

It is generated from these files:
	student.proto

It has these top-level messages:
	Student
	GetStudentRequest
	AllStudents
*/
package studentinfo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Student struct {
	Id    int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	FName string `protobuf:"bytes,2,opt,name=fName" json:"fName,omitempty"`
	LName string `protobuf:"bytes,3,opt,name=lName" json:"lName,omitempty"`
	Year  int32  `protobuf:"varint,4,opt,name=year" json:"year,omitempty"`
	Gpa   int32  `protobuf:"varint,5,opt,name=gpa" json:"gpa,omitempty"`
	Major string `protobuf:"bytes,6,opt,name=major" json:"major,omitempty"`
}

func (m *Student) Reset()                    { *m = Student{} }
func (m *Student) String() string            { return proto.CompactTextString(m) }
func (*Student) ProtoMessage()               {}
func (*Student) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Student) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Student) GetFName() string {
	if m != nil {
		return m.FName
	}
	return ""
}

func (m *Student) GetLName() string {
	if m != nil {
		return m.LName
	}
	return ""
}

func (m *Student) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Student) GetGpa() int32 {
	if m != nil {
		return m.Gpa
	}
	return 0
}

func (m *Student) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

type GetStudentRequest struct {
	Id int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetStudentRequest) Reset()                    { *m = GetStudentRequest{} }
func (m *GetStudentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetStudentRequest) ProtoMessage()               {}
func (*GetStudentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetStudentRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type AllStudents struct {
	Students []*Student `protobuf:"bytes,1,rep,name=students" json:"students,omitempty"`
}

func (m *AllStudents) Reset()                    { *m = AllStudents{} }
func (m *AllStudents) String() string            { return proto.CompactTextString(m) }
func (*AllStudents) ProtoMessage()               {}
func (*AllStudents) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AllStudents) GetStudents() []*Student {
	if m != nil {
		return m.Students
	}
	return nil
}

func init() {
	proto.RegisterType((*Student)(nil), "studentinfo.Student")
	proto.RegisterType((*GetStudentRequest)(nil), "studentinfo.GetStudentRequest")
	proto.RegisterType((*AllStudents)(nil), "studentinfo.AllStudents")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Students service

type StudentsClient interface {
	GetStudent(ctx context.Context, in *GetStudentRequest, opts ...grpc.CallOption) (*Student, error)
	GetAllStudents(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*AllStudents, error)
	CreateStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Student, error)
}

type studentsClient struct {
	cc *grpc.ClientConn
}

func NewStudentsClient(cc *grpc.ClientConn) StudentsClient {
	return &studentsClient{cc}
}

func (c *studentsClient) GetStudent(ctx context.Context, in *GetStudentRequest, opts ...grpc.CallOption) (*Student, error) {
	out := new(Student)
	err := grpc.Invoke(ctx, "/studentinfo.Students/GetStudent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentsClient) GetAllStudents(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*AllStudents, error) {
	out := new(AllStudents)
	err := grpc.Invoke(ctx, "/studentinfo.Students/GetAllStudents", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *studentsClient) CreateStudent(ctx context.Context, in *Student, opts ...grpc.CallOption) (*Student, error) {
	out := new(Student)
	err := grpc.Invoke(ctx, "/studentinfo.Students/CreateStudent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Students service

type StudentsServer interface {
	GetStudent(context.Context, *GetStudentRequest) (*Student, error)
	GetAllStudents(context.Context, *google_protobuf1.Empty) (*AllStudents, error)
	CreateStudent(context.Context, *Student) (*Student, error)
}

func RegisterStudentsServer(s *grpc.Server, srv StudentsServer) {
	s.RegisterService(&_Students_serviceDesc, srv)
}

func _Students_GetStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStudentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentsServer).GetStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studentinfo.Students/GetStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentsServer).GetStudent(ctx, req.(*GetStudentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Students_GetAllStudents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentsServer).GetAllStudents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studentinfo.Students/GetAllStudents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentsServer).GetAllStudents(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Students_CreateStudent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Student)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StudentsServer).CreateStudent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/studentinfo.Students/CreateStudent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StudentsServer).CreateStudent(ctx, req.(*Student))
	}
	return interceptor(ctx, in, info, handler)
}

var _Students_serviceDesc = grpc.ServiceDesc{
	ServiceName: "studentinfo.Students",
	HandlerType: (*StudentsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStudent",
			Handler:    _Students_GetStudent_Handler,
		},
		{
			MethodName: "GetAllStudents",
			Handler:    _Students_GetAllStudents_Handler,
		},
		{
			MethodName: "CreateStudent",
			Handler:    _Students_CreateStudent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "student.proto",
}

func init() { proto.RegisterFile("student.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x4b, 0x4e, 0xf3, 0x30,
	0x10, 0x56, 0xd2, 0xe7, 0x3f, 0xfd, 0x5b, 0xc1, 0xa8, 0x2a, 0x56, 0x80, 0xaa, 0x0a, 0x9b, 0xae,
	0x6c, 0x28, 0x3b, 0x36, 0x08, 0x21, 0xd4, 0x1d, 0x8b, 0xb2, 0x41, 0xec, 0x5c, 0xd5, 0xad, 0x82,
	0xd2, 0x38, 0x24, 0x2e, 0x52, 0x85, 0x58, 0xc0, 0x15, 0xb8, 0x02, 0x37, 0xe2, 0x0a, 0x1c, 0x04,
	0xc5, 0x76, 0x4a, 0xa2, 0x96, 0xdd, 0x7c, 0xe3, 0xf9, 0x1e, 0x9e, 0x81, 0x76, 0xaa, 0x56, 0x33,
	0x11, 0x29, 0x1a, 0x27, 0x52, 0x49, 0x6c, 0x59, 0x18, 0x44, 0x73, 0xe9, 0x1d, 0x2d, 0xa4, 0x5c,
	0x84, 0x82, 0xf1, 0x38, 0x60, 0x3c, 0x8a, 0xa4, 0xe2, 0x2a, 0x90, 0x51, 0x6a, 0x46, 0xbd, 0x43,
	0xfb, 0xaa, 0xd1, 0x74, 0x35, 0x67, 0x62, 0x19, 0xab, 0xb5, 0x79, 0xf4, 0xdf, 0x1c, 0x68, 0xdc,
	0x19, 0x29, 0xec, 0x80, 0x1b, 0xcc, 0x88, 0x33, 0x70, 0x86, 0xb5, 0x89, 0x1b, 0xcc, 0xb0, 0x0b,
	0xb5, 0xf9, 0x2d, 0x5f, 0x0a, 0xe2, 0x0e, 0x9c, 0xe1, 0xbf, 0x89, 0x01, 0x59, 0x37, 0xd4, 0xdd,
	0x8a, 0xe9, 0x6a, 0x80, 0x08, 0xd5, 0xb5, 0xe0, 0x09, 0xa9, 0x6a, 0xb6, 0xae, 0x71, 0x0f, 0x2a,
	0x8b, 0x98, 0x93, 0x9a, 0x6e, 0x65, 0x65, 0xc6, 0x5d, 0xf2, 0x47, 0x99, 0x90, 0xba, 0xe1, 0x6a,
	0xe0, 0x9f, 0xc0, 0xfe, 0x58, 0x28, 0x9b, 0x62, 0x22, 0x9e, 0x56, 0x22, 0xdd, 0x0a, 0xe3, 0x5f,
	0x42, 0xeb, 0x2a, 0x0c, 0xed, 0x50, 0x8a, 0xa7, 0xd0, 0xb4, 0x1b, 0x48, 0x89, 0x33, 0xa8, 0x0c,
	0x5b, 0xa3, 0x2e, 0x2d, 0xac, 0x84, 0xe6, 0x6a, 0x9b, 0xa9, 0xd1, 0xa7, 0x0b, 0xcd, 0x0d, 0x7d,
	0x0a, 0xf0, 0x6b, 0x89, 0xfd, 0x12, 0x75, 0x2b, 0x8b, 0xb7, 0x53, 0xda, 0xef, 0xbf, 0x7f, 0x7d,
	0x7f, 0xb8, 0x04, 0x7b, 0xec, 0xf9, 0x8c, 0xe5, 0x36, 0xec, 0xc5, 0x56, 0xaf, 0x78, 0x0f, 0x9d,
	0xb1, 0x50, 0xc5, 0xd0, 0x3d, 0x6a, 0x4e, 0x41, 0xf3, 0x53, 0xd0, 0x9b, 0xec, 0x14, 0x1e, 0x29,
	0xe9, 0x17, 0x18, 0x7e, 0x57, 0x7b, 0x74, 0xf0, 0x7f, 0xd1, 0x03, 0x1f, 0xa0, 0x7d, 0x9d, 0x08,
	0xae, 0x44, 0xfe, 0x81, 0x9d, 0x01, 0xff, 0x88, 0x7d, 0xac, 0x25, 0x0f, 0xfc, 0x92, 0xe4, 0x45,
	0xc3, 0x56, 0xd3, 0xba, 0xce, 0x76, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xc6, 0x13, 0xaa, 0x0f,
	0x70, 0x02, 0x00, 0x00,
}
